#!/bin/bash
ccachedir=/ccache
archive_folder=/root/ccache_archives

if [ -n "$CACHE_GIT_URL" ]; then

    if ! ccache --version >/dev/null 2>&1; then
        apt-get update
        apt-get install -y ccache --no-install-recommends
        apt-get clean autoclean -y
    else
        echo ccache already installed
        ccache --version
    fi

cat << EOT >> /etc/ccache.conf
# Set maximum cache size and location:
max_size = 768M
cache_dir = ${ccachedir}
EOT

function upload_cache {
    pushd /
    ccache -s
    
    rm "${archive_folder}/${CACHE_ARCHIVE}" || true

    tar -czf "${archive_folder}/${CACHE_ARCHIVE}" --directory=/ ${ccachedir}
    cd "${archive_folder}"
    git add .
    git commit --amend -m "update data"

    echo uploading
    git push origin "${CACHE_BRANCH}":"${CACHE_BRANCH}" -f
    popd

    rm -rf "${archive_folder}" 
}

function download_cache {
    pushd /root
    git clone --depth 1 "${CACHE_GIT_URL}" -b "${CACHE_BRANCH}" "${archive_folder}"
    cd "${archive_folder}"
    git config user.email none@buildsandbox
    git config user.name "CI"

    mkdir -p ${ccachedir}
    rm -rf "${ccachedir:?}/*"
    if [ -f "${archive_folder}/${CACHE_ARCHIVE}" ]; then
        echo expand the cache
        cd ${ccachedir}/..
        tar -xvf "${archive_folder}/${CACHE_ARCHIVE}"
    fi
    cp /etc/ccache.conf ${ccachedir}
    chmod -R a+rwX ${ccachedir}
    ccache -s
    popd
}

function remove_cache {
    rm -rf ${ccachedir:?}/* || true
    rm -rf "${archive_folder}" || true
}

/usr/sbin/update-ccache-symlinks
export PATH="/usr/lib/ccache:$PATH"

else

echo No CACHE_GIT_URL set. Disabling cache
function upload_cache {
    echo Cache disabled, not uploading cache.
}

function download_cache {
    echo Cache disabled, not downloading cache.
}

function remove_cache {
    echo Cache disabled, not removing cache.
}

fi

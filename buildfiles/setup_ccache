#!/bin/bash
ccachedir=${CCACHE_DIR:-"/ccache"}
archive_folder=/root/ccache_archives

if [ -n "$CACHE_GIT_URL" ]; then

    if ! ccache --version >/dev/null 2>&1; then
        apt-get update
        apt-get install -y ccache --no-install-recommends
        apt-get clean autoclean -y
    else
        echo ccache already installed
        ccache --version
    fi

cat << EOT >> /etc/ccache.conf
# Set maximum cache size and location:
max_size = 768M
cache_dir = ${ccachedir}
EOT

function test_cache() {
cat << EOT > ~/test.c
#include <stdio.h>

int main (void) {
  printf ("`openssl rand -base64 16`");
  return 0;
}
EOT
echo testing ccache setup
c++ -c -Wall -g ~/test.c
rm test.o ~/test.c
echo ccache test passed
ccache -s
}

function upload_cache {
    pushd /
    ccache -s | tee "${archive_folder}/after_stats.txt"
    
    rm "${archive_folder}/${CACHE_ARCHIVE}" || true

    tar -czf "${archive_folder}/${CACHE_ARCHIVE}" --directory=/ ${ccachedir}
    cd "${archive_folder}"
    git add .
    git commit --amend -m "update data"

    echo uploading
    git push origin "${CACHE_BRANCH}":"${CACHE_BRANCH}" -f
    popd

    rm -rf "${archive_folder}" 
}

function fix_permissions {
    chmod ugo+rwx ${ccachedir}
    find ${ccachedir} -type d -exec chmod ugo+rwx {} \;
    find ${ccachedir} -type f -exec chmod ugo+rw {} \;
}

function download_cache {
    pushd /root
    git clone --depth 1 "${CACHE_GIT_URL}" -b "${CACHE_BRANCH}" "${archive_folder}"
    cd "${archive_folder}"
    git config user.email none@buildsandbox
    git config user.name "CI"
    echo ${ccachedir}
    mkdir -p ${ccachedir}
    if [ -f "${archive_folder}/${CACHE_ARCHIVE}" ]; then
        echo expand the cache content
        cd ${ccachedir}/..
        tar -xvf "${archive_folder}/${CACHE_ARCHIVE}"
        fix_permissions
    fi
    cp /etc/ccache.conf ${ccachedir}
    ccache -s | tee "${archive_folder}/before_stats.txt"
    popd
    test_cache
    fix_permissions
}

function remove_cache {
    rm -rf ${ccachedir:?}/* || true
    rm -rf "${archive_folder}" || true
}

/usr/sbin/update-ccache-symlinks
export PATH="/usr/lib/ccache:$PATH"

else

echo No CACHE_GIT_URL set. Disabling cache
function upload_cache {
    echo Cache disabled, not uploading cache.
}

function download_cache {
    echo Cache disabled, not downloading cache.
}

function remove_cache {
    echo Cache disabled, not removing cache.
}

fi
